<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.cloud.stream.app</groupId>
		<artifactId>stream-applications-build</artifactId>
		<version>1.1.0-SNAPSHOT</version>
		<relativePath/>
	</parent>

	<artifactId>stream-applications-core</artifactId>
	<version>${revision}</version>
	<name>stream-applications-core</name>
	<description>Stream Applications Core Parent</description>
	<packaging>pom</packaging>

	<properties>
		<revision>3.1.0-SNAPSHOT</revision>
		<apps.base-image>springcloud/baseimage:1.0.0</apps.base-image>
		<mockserver.version>5.10</mockserver.version>
		<stream-apps-core.version>${revision}</stream-apps-core.version>
		<java-functions.version>1.1.0-SNAPSHOT</java-functions.version>
		<spring-cloud-stream-dependencies.version>3.1.0-SNAPSHOT</spring-cloud-stream-dependencies.version>
		<spring-cloud-stream.version>3.1.0-SNAPSHOT</spring-cloud-stream.version>
		<spring-cloud-dataflow-apps-generator-plugin.version>1.1.0-SNAPSHOT
		</spring-cloud-dataflow-apps-generator-plugin.version>
		<spring-cloud-dataflow-apps-docs-plugin.version>1.0.0-SNAPSHOT</spring-cloud-dataflow-apps-docs-plugin.version>
		<java-cfenv-boot.version>2.1.2.RELEASE</java-cfenv-boot.version>
		<prometheus-rsocket.version>1.2.1</prometheus-rsocket.version>
	</properties>

    <modules>
        <module>stream-applications-test-support</module>
        <module>stream-applications-postprocessor-common</module>
        <module>stream-applications-micrometer-common</module>
        <module>stream-applications-security-common</module>
        <module>stream-applications-composite-function-support</module>
    </modules>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud.fn</groupId>
				<artifactId>function-dependencies</artifactId>
				<version>${java-functions.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-stream-dependencies</artifactId>
				<version>${spring-cloud-stream-dependencies.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.mock-server</groupId>
				<artifactId>mockserver-netty</artifactId>
				<version>${mockserver.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mock-server</groupId>
				<artifactId>mockserver-client-java</artifactId>
				<version>${mockserver.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-stream</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-stream</artifactId>
			<type>test-jar</type>
			<classifier>test-binder</classifier>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.springframework.cloud</groupId>
					<artifactId>spring-cloud-dataflow-apps-docs-plugin</artifactId>
					<version>${spring-cloud-dataflow-apps-docs-plugin.version}</version>
					<executions>
						<execution>
							<id>generate-documentation</id>
							<phase>verify</phase>
							<goals>
								<goal>generate-documentation</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.springframework.cloud</groupId>
					<artifactId>spring-cloud-dataflow-apps-generator-plugin</artifactId>
					<version>${spring-cloud-dataflow-apps-generator-plugin.version}</version>
					<executions>
						<execution>
							<id>app-gen</id>
							<phase>package</phase>
							<goals>
								<goal>generate-app</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<generatedProjectHome>${basedir}/apps</generatedProjectHome>
						<global>
							<application>
								<bootVersion>${spring-boot.version}</bootVersion>
								<containerImage>
									<orgName>springcloudstream</orgName>
									<baseImage>${apps.base-image}</baseImage>
									<enableMetadata>true</enableMetadata>
								</containerImage>
								<properties>
									<!-- Disable all meter repositories by default.  -->
									<management.metrics.export.wavefront.enabled>false
									</management.metrics.export.wavefront.enabled>
									<management.metrics.export.influx.enabled>false
									</management.metrics.export.influx.enabled>
									<management.metrics.export.prometheus.enabled>false
									</management.metrics.export.prometheus.enabled>
									<management.metrics.export.prometheus.rsocket.enabled>false
									</management.metrics.export.prometheus.rsocket.enabled>
									<management.metrics.export.datadog.enabled>false
									</management.metrics.export.datadog.enabled>

									<!-- Add SCDF stream metrics tags. -->
									<management.metrics.tags.stream.name>
										"${spring.cloud.dataflow.stream.name:unknown}"
									</management.metrics.tags.stream.name>
									<management.metrics.tags.application.name>
										"${spring.cloud.dataflow.stream.app.label:unknown}"
									</management.metrics.tags.application.name>
									<management.metrics.tags.application.type>
										"${spring.cloud.dataflow.stream.app.type:unknown}"
									</management.metrics.tags.application.type>
									<management.metrics.tags.instance.index>"${spring.cloud.stream.instanceIndex:0}"
									</management.metrics.tags.instance.index>
									<management.metrics.tags.application.guid>
										"${spring.cloud.application.guid:unknown}"
									</management.metrics.tags.application.guid>
								</properties>
								<metadata>
									<mavenPluginVersion>1.0.0-M1</mavenPluginVersion>
								</metadata>
								<maven>
									<dependencyManagement>
										<dependency>
											<groupId>org.springframework.integration</groupId>
											<artifactId>spring-integration-bom</artifactId>
											<version>${spring-integration-dependencies.version}</version>
											<scope>import</scope>
											<type>pom</type>
										</dependency>
										<dependency>
											<groupId>org.springframework.cloud.fn</groupId>
											<artifactId>function-dependencies</artifactId>
											<version>${java-functions.version}</version>
										</dependency>
										<dependency>
											<groupId>org.springframework.cloud</groupId>
											<artifactId>spring-cloud-stream-dependencies</artifactId>
											<version>${spring-cloud-stream-dependencies.version}</version>
										</dependency>
										<dependency>
											<groupId>org.springframework.cloud</groupId>
											<artifactId>spring-cloud-function-dependencies</artifactId>
											<version>${spring-cloud-function.version}</version>
										</dependency>
									</dependencyManagement>
									<dependencies>
										<dependency>
											<groupId>org.springframework.cloud.stream.app</groupId>
											<artifactId>stream-applications-security-common</artifactId>
											<version>${stream-apps-core.version}</version>
										</dependency>
										<dependency>
											<groupId>org.springframework.cloud.stream.app</groupId>
											<artifactId>stream-applications-micrometer-common</artifactId>
											<version>${stream-apps-core.version}</version>
										</dependency>
										<dependency>
											<groupId>org.springframework.cloud.stream.app</groupId>
											<artifactId>stream-applications-postprocessor-common</artifactId>
											<version>${stream-apps-core.version}</version>
										</dependency>
										<dependency>
											<groupId>io.micrometer</groupId>
											<artifactId>micrometer-registry-influx</artifactId>
										</dependency>
										<dependency>
											<groupId>io.micrometer</groupId>
											<artifactId>micrometer-registry-prometheus</artifactId>
										</dependency>
										<dependency>
											<groupId>io.micrometer.prometheus</groupId>
											<artifactId>prometheus-rsocket-spring</artifactId>
											<version>${prometheus-rsocket.version}</version>
										</dependency>
										<dependency>
											<groupId>io.micrometer</groupId>
											<artifactId>micrometer-registry-datadog</artifactId>
										</dependency>
										<dependency>
											<groupId>io.micrometer</groupId>
											<artifactId>micrometer-registry-wavefront</artifactId>
										</dependency>
										<!-- Override the WF SDK dependency to resolve the https://github.com/wavefrontHQ/wavefront-sdk-java/pull/152
											 TODO: removed this dependency when Micrometer and Boot catch up with WF SDC 2.6.+ (likely Micrometer 1.5.3+).
											 -->
										<dependency>
											<groupId>com.wavefront</groupId>
											<artifactId>wavefront-sdk-java</artifactId>
											<version>2.6.0</version>
										</dependency>

										<dependency>
											<groupId>io.pivotal.cfenv</groupId>
											<artifactId>java-cfenv-boot</artifactId>
											<version>${java-cfenv-boot.version}</version>
										</dependency>
										<dependency>
											<groupId>org.springframework.boot</groupId>
											<artifactId>spring-boot-configuration-processor</artifactId>
										</dependency>
										<dependency>
											<groupId>org.springframework.boot</groupId>
											<artifactId>spring-boot-starter-actuator</artifactId>
										</dependency>
										<dependency>
											<groupId>org.springframework.boot</groupId>
											<artifactId>spring-boot-starter-web</artifactId>
										</dependency>
										<dependency>
											<groupId>org.springframework.boot</groupId>
											<artifactId>spring-boot-starter-logging</artifactId>
										</dependency>
										<dependency>
											<groupId>org.springframework.boot</groupId>
											<artifactId>spring-boot-starter-security</artifactId>
										</dependency>
									</dependencies>
								</maven>
							</application>
							<binders>
								<kafka>
									<maven>
										<dependencies>
											<dependency>
												<groupId>org.springframework.cloud</groupId>
												<artifactId>spring-cloud-stream-binder-kafka</artifactId>
											</dependency>
										</dependencies>
									</maven>
								</kafka>
								<rabbit>
									<maven>
										<dependencies>
											<dependency>
												<groupId>org.springframework.cloud</groupId>
												<artifactId>spring-cloud-stream-binder-rabbit</artifactId>
											</dependency>
										</dependencies>
									</maven>
								</rabbit>
							</binders>
						</global>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>

